# Generated by Django 5.2.2 on 2025-06-09 03:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FitnessClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='automaticaly set when model created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='automaticaly updated when model saved')),
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('class_name', models.CharField(help_text='name of fitness class category i.e Yoga, Zumba, and HIIT.', max_length=255)),
                ('description', models.TextField(help_text='short description of the fitness class.')),
                ('from_date', models.DateField(help_text='start date of fitness class')),
                ('to_date', models.DateField(help_text='end date of fitness class')),
                ('from_time', models.TimeField(help_text='start time of fitness class')),
                ('to_time', models.TimeField(help_text='end time of fitness class')),
                ('available_slot', models.PositiveSmallIntegerField(default=0, help_text='Number of available slots.')),
            ],
            options={
                'verbose_name': 'Fitness Class',
                'verbose_name_plural': 'Fitness Classes',
            },
        ),
        migrations.CreateModel(
            name='BookingSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='automaticaly set when model created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='automaticaly updated when model saved')),
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('client', models.ForeignKey(help_text='Client for fitness slot.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('fitness_class', models.ManyToManyField(help_text='fitness class for client.', to='book.fitnessclass')),
            ],
            options={
                'verbose_name': 'Booking Slot',
                'verbose_name_plural': 'Booking Slots',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='automaticaly set when model created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='automaticaly updated when model saved')),
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('father_name', models.CharField(help_text='name of father of instructor.', max_length=50)),
                ('contact_number', models.CharField(help_text='contact number of instructor.', max_length=20)),
                ('full_address', models.TextField(help_text='full address of Instructor.')),
                ('zip_code', models.CharField(help_text='zip code of Instructor local area.', max_length=10)),
                ('experience', models.PositiveSmallIntegerField(default=0, help_text='month of experience.')),
                ('user_instructor', models.OneToOneField(help_text='Instructor', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instructor',
                'verbose_name_plural': 'Instructors',
            },
        ),
        migrations.AddField(
            model_name='fitnessclass',
            name='instructer',
            field=models.ManyToManyField(help_text='Instructors assigned to this fitness class.', to='book.instructor'),
        ),
    ]
